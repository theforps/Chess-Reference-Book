<Window x:Class="RotTsar.TutorialWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RotTsar"
        mc:Ignorable="d"
        
        MinWidth="1600"
        MinHeight="900"
        
        Width="1600"
        Height="900"
        WindowState="Maximized"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        MouseLeftButtonDown="Window_MouseLeftButtonDown">

    <Window.Resources>

        <!--СТИЛЬ ДЛЯ КНОПОК УРОКОВ-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   StrokeDashArray="1 2"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   SnapsToDevicePixels="true"
                                   StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#86a94b"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#2b3419"/>

        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#9eba6f"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#2b3419"/>

        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#9eba6f"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#2b3419"/>

        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="LessonButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="FontFamily" Value="Departura"/>
            <Setter Property="ItemsControl.FontSize" Value="25"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="white"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                CornerRadius="20"
                                Height="70"
                                Width="200"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">

                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>

                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--СТИЛЬ ДЛЯ КНОПОК STATUS BAR-->
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   StrokeDashArray="1 2"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   SnapsToDevicePixels="true"
                                   StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background1" Color="#242321"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#242321"/>

        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#3a3835"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#9e9e9e"/>

        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#625e56"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#9e9e9e"/>

        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>

        <Style x:Key="StatusBarButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Foreground" Value="#e5e5e5"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--СТИЛЬ ДЛЯ КНОПОК МОДУЛЕЙ-->
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   StrokeDashArray="1 2"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   SnapsToDevicePixels="true"
                                   StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#86a94b"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#2b3419"/>

        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#9eba6f"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#2b3419"/>

        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#2b3419"/>

        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>

        <Style x:Key="ModulButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontFamily" Value="Departura"/>
            <Setter Property="FontSize" Value="25"/>
            <Setter Property="Height" Value="70"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>
        <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                CornerRadius="50"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Border Background="#312d2a">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25px"/>
                <RowDefinition Height="0.1*"/>
                <RowDefinition Height="*"/>

            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--StatusBar-->

            <Grid MinHeight="30" MaxHeight="30" Grid.ColumnSpan="3" Background="#242321">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="0.05*"/>
                    <ColumnDefinition Width="0.05*"/>
                    <ColumnDefinition Width="0.05*"/>
                    <ColumnDefinition Width="0.05*"/>
                </Grid.ColumnDefinitions>

                <Button Content="X"
                    Click="Exit"
                    x:Name="Cross_Exit_Button"
                    Style="{DynamicResource StatusBarButtonStyle}"
                    Grid.Column="4"/>

                <Button x:Name="Minimise_Button"
                        Click="Minimise_Button_Click"
                    Style="{DynamicResource StatusBarButtonStyle}"
                    Grid.Column="3">_</Button>

                <Border x:Name="StatusBar"
                    Background="#242321" Grid.ColumnSpan="3" Margin="0,0,1,0"/>

            </Grid>

            <Button Style="{DynamicResource BackButtonStyle}" x:Name="Back_Button"
                    Height="40"
                    Width="40"
                    BorderThickness="0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Margin="10 0 0 0"
                    Click="Back_Button_Click"
                    Grid.Row="1">
                <Button.Background>
                    <ImageBrush ImageSource="/Chess/Back_Arrow.png"/>
                </Button.Background>
            </Button>

            <ScrollViewer Grid.Row="3">
                <StackPanel>
                    <!--ФИГУРЫ-->
                    <Button
                    x:Name="Figures_Button"
                    BorderThickness="0"
                    Style="{DynamicResource ModulButtonStyle}"
                    MinHeight="50"
                    Margin="10"
                    Content="Module 1. Shapes"
                    IsDefault="True"
                    Click="Figures_Button_Click"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Pawn_Button"
                    Click="Pawn_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Pawn"
                    Visibility="Collapsed"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Knight_Button"
                    Click="Knight_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Knight"
                    Visibility="Collapsed"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Bishop_Button"
                    Click="Bishop_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Bishop"
                    Visibility="Collapsed"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="King_Button"
                    Click="King_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="King"
                    Visibility="Collapsed"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Queen_Button"
                    Click="Queen_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Queen"
                    Visibility="Collapsed"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Rook_Button"
                    Click="Rook_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Rook"
                    Visibility="Collapsed"/>

                    <!--МОДУЛЬ 2. ПРИНЦИПЫ ИГРЫ-->
                    <Button Style="{DynamicResource ModulButtonStyle}"
                    x:Name="Game_Basics_Button"
                    Click="Game_Basics_Button_Click"
                    MinHeight="50"
                    Margin="10"
                    Content="Module 2. Principles of the game"
                    IsDefault="True"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Check_Button"
                    Click="Check_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Check"
                    Visibility="Collapsed"/>

                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Check_And_Mate_Button"
                    Click="Check_And_Mate_Button_Click"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Mate"
                    Visibility="Collapsed"/>


                    <!--МОДУЛЬ 3. Основы дебюта-->
                    <!--
                    <Button Style="{DynamicResource ModulButtonStyle}"
                    x:Name="Debut_Basics_Button" 
                    Click="Debut_Basics_Button_Click"
                    MinHeight="50"
                    Margin="10"
                    Content="Модуль 3. Основы дебюта"
                    IsDefault="True"/>
                    
                    <Button Style="{DynamicResource LessonButtonStyle}"
                    x:Name="Italian_Button"
                    MinHeight="50"
                    Margin="10 10 50 10"
                    Content="Итальянская партия"
                    Visibility="Collapsed"
                    Click="Italian_Button_Click"/>
                    -->

                </StackPanel>
            </ScrollViewer>

            <Frame x:Name="Pawn_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="PawnWindow.xaml"
                   Visibility="Collapsed"/>

            <Frame x:Name="Knight_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="KnightWindow.xaml"
                   Visibility="Collapsed"/>

            <Frame x:Name="Bishop_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="BishopWindow.xaml"
                   Visibility="Collapsed"/>

            <Frame x:Name="King_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="KingWindow.xaml"
                   Visibility="Collapsed"/>

            <Frame x:Name="Queen_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="QueenWindow.xaml"
                   Visibility="Collapsed"/>

            <Frame x:Name="Rook_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="RookWindow.xaml"
                   Visibility="Collapsed"/>
            <!--
            <Frame x:Name="Italian_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="ItalianWindow.xaml"
                   Visibility="Collapsed"/>
            -->
            <Frame x:Name="Checkmate_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="Checkmate.xaml"
                   Visibility="Collapsed"/>

            <Frame x:Name="Check_Board"
                   Grid.Column="1"
                   Grid.Row="1"
                   Grid.RowSpan="2"
                   Grid.ColumnSpan="2"
                   Source="Check.xaml"
                   Visibility="Collapsed"/>

        </Grid>
    </Border>
</Window>